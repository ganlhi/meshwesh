generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mongodb"
  url      = env("DATABASE_URL")
}

type TroopOptions {
  id                String              @map("_id") @db.ObjectId
  battleCardEntries BattleCardEntries[]
  core              String
  dateRanges        DateRanges[]
  description       String
  max               Int
  min               Int
  note              String
  troopEntries      TroopEntry[]
}

type DateRanges {
  id        String @map("_id") @db.ObjectId
  endDate   Int
  startDate Int
}

type AllyOptions {
  id          String        @map("_id") @db.ObjectId
  allyEntries AllyEntries[]
  dateRange   DateRange?
  note        String?
}

type AllyEntries {
  id           String @map("_id") @db.ObjectId
  allyArmyList String @db.ObjectId
  name         String
}

type DateRange {
  id        String @map("_id") @db.ObjectId
  endDate   Int
  startDate Int
}

type BattleCardEntries {
  id             String  @map("_id") @db.ObjectId
  battleCardCode String
  max            Int?
  min            Int?
  note           String?
}

type DerivedData {
  extendedName  String
  listEndDate   Int
  listStartDate Int
}

type HomeTopographies {
  id     String   @map("_id") @db.ObjectId
  note   String
  values String[]
}

type InvasionRatings {
  id    String  @map("_id") @db.ObjectId
  note  String?
  value Int
}

type ManeuverRatings {
  id    String  @map("_id") @db.ObjectId
  note  String?
  value Int
}

type TroopEntriesForGeneral {
  id           String       @map("_id") @db.ObjectId
  troopEntries TroopEntry[]
}

type TroopEntry {
  id               String  @map("_id") @db.ObjectId
  dismountTypeCode String?
  note             String?
  troopTypeCode    String
}

type TrooptypesCombatFactors {
  closeCombat  TrooptypesCombatFactorsCloseCombat
  rangedCombat TrooptypesCombatFactorsRangedCombat
}

type TrooptypesCombatFactorsCloseCombat {
  vsFoot    Int
  vsMounted Int
}

type TrooptypesCombatFactorsRangedCombat {
  shooting Int
  shotAt   Int
}

model allyarmylists {
  id                 String         @id @default(auto()) @map("_id") @db.ObjectId
  armyListId         String?        @db.ObjectId
  dateRange          DateRange?
  internalContingent Boolean
  listId             Float
  name               String
  sublistId          String
  troopOptions       TroopOptions[]
}

model armylistidmaps {
  id         String @id @default(auto()) @map("_id") @db.ObjectId
  databaseId String
  listId     String
  sublistId  String
}

model armylists {
  id                          String                   @id @default(auto()) @map("_id") @db.ObjectId
  allyOptions                 AllyOptions[]
  battleCardEntries           BattleCardEntries[]
  dateRanges                  DateRanges[]
  derivedData                 DerivedData
  homeTopographies            HomeTopographies[]
  invasionRatings             InvasionRatings[]
  keywords                    String[]
  listId                      Float
  maneuverRatings             ManeuverRatings[]
  name                        String
  showTroopOptionDescriptions Boolean
  sortId                      Float
  status                      String
  sublistId                   String
  troopEntriesForGeneral      TroopEntriesForGeneral[]
  troopOptions                TroopOptions[]
}

model battlecards {
  id            String  @id @default(auto()) @map("_id") @db.ObjectId
  category      String
  displayName   String
  importName    String
  listName      String
  mdText        String
  permanentCode String  @unique(map: "permanentCode_1")
  showInList    Boolean
}

model enemyxrefs {
  id        String @id @default(auto()) @map("_id") @db.ObjectId
  armyList1 String @db.ObjectId
  armyList2 String @db.ObjectId
}

model thematiccategories {
  id   String @id @default(auto()) @map("_id") @db.ObjectId
  name String @unique(map: "name_1")
}

model thematiccategorytoarmylistxrefs {
  id               String @id @default(auto()) @map("_id") @db.ObjectId
  armyList         String @db.ObjectId
  thematicCategory String @db.ObjectId
}

model trooptypes {
  id            String                  @id @default(auto()) @map("_id") @db.ObjectId
  category      String
  combatFactors TrooptypesCombatFactors
  cost          Int
  description   String
  displayCode   String
  displayName   String
  importName    String
  order         String
  permanentCode String                  @unique(map: "permanentCode_1")
}

model users {
  id           String @id @default(auto()) @map("_id") @db.ObjectId
  emailAddress String @unique(map: "emailAddress_1")
  passwordHash String
  role         String
  salt         String
}
